{"version":3,"file":"static/js/992.5a88fa30.chunk.js","mappings":"wOACA,EAAsB,0BAAtB,EAAsD,0BAAtD,EAAgG,oCAAhG,EAAgJ,gC,SCU1IA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,iCACrBC,GAAOD,EAAAA,EAAAA,OAAK,kBAAM,gCAkFxB,EAjFqB,WACnB,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAUM,QAEX,CAACL,IAGAF,EAAQ,CAAC,IAAD,IAERQ,EAMER,EANFQ,YACAC,EAKET,EALFS,OACAC,EAIEV,EAJFU,eACAC,EAGEX,EAHFW,SACAC,EAEEZ,EAFFY,aACAC,EACEb,EADFa,aAEIC,EAAa,oBAAGjB,EAASkB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC9C,OACE,iCACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASC,GAAIL,EAAb,UACE,mBACEG,UAAWC,EADb,wBAOF,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXE,IAAG,yCAAoCZ,GACvCa,IAAKX,KAGP,4BACE,0BACGA,EADH,KACqBE,EADrB,QAGA,wCAAgBC,MAChB,sCACA,uBAAIF,KACJ,oCACA,wBACGF,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,0BAAgBA,EAAhB,MAASA,eAMjB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASJ,GAAG,OAAOJ,MAAO,CAAEC,KAAMF,GAAlC,qBAIF,yBACE,SAAC,KAAD,CAASK,GAAG,UAAUJ,MAAO,CAAEC,KAAMF,GAArC,iCAOR,SAAC,EAAAU,SAAD,CAAUC,UAAU,6CAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,UAAUC,SAAS,SAACjC,EAAD,CAASkC,GAAI1B,OAC5C,SAAC,KAAD,CAAOwB,KAAK,OAAOC,SAAS,SAAC/B,EAAD,CAAMgC,GAAI1B,iB,0MCrF5C2B,EAAW,+BAEXC,EAAM,mCAECC,EAAW,mCAAG,uGAEVC,IAAAA,IAAA,UACHH,EADG,uCACoCC,IAC9CxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJN,wEAMvBC,QAAQC,MAAR,MANuB,wDAAH,qDAUXC,EAAc,mCAAG,uGAAOC,EAAP,+BAAe,GAAf,kBAEbN,IAAAA,IAAA,UACHH,EADG,iCAC8BC,EAD9B,kBAC2CQ,EAD3C,YAEVhC,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJH,wEAM1BC,QAAQC,MAAR,MAN0B,yDAAH,qDASd/B,EAAe,mCAAG,WAAMuB,GAAN,0FAEdI,IAAAA,IAAA,UACHH,EADG,kBACeD,EADf,oBAC6BE,IACvCxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJF,wEAM3BC,QAAQC,MAAR,MAN2B,wDAAH,sDASfG,EAAe,mCAAG,WAAMX,GAAN,0FAEdI,IAAAA,IAAA,UACHH,EADG,kBACeD,EADf,4BACqCE,IAC/CxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJF,wEAM3BC,QAAQC,MAAR,MAN2B,wDAAH,sDASfI,EAAe,mCAAG,WAAMZ,GAAN,0FAEdI,IAAAA,IAAA,UACHH,EADG,kBACeD,EADf,4BACqCE,IAC/CxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJF,wEAM3BC,QAAQC,MAAR,MAN2B,wDAAH","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/filmAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetails_img__D3WH9\",\"btn\":\"MovieDetails_btn__tCU2l\",\"movie_details\":\"MovieDetails_movie_details__AvFFx\",\"container\":\"MovieDetails_container__o8VqJ\"};","import { lazy, useState, useEffect, Suspense } from 'react';\nimport {\n  NavLink,\n  useParams,\n  Route,\n  Routes,\n  useLocation,\n} from 'react-router-dom';\n// import { createBrowserHistory } from 'history';\nimport { movieDetailsAPI } from 'services/filmAPI';\nimport s from './MovieDetails.module.css';\nconst Reviews = lazy(() => import('../Reviews'));\nconst Cast = lazy(() => import('../Cast'));\nconst MovieDetails = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    movieDetailsAPI(movieId).then(result => {\n      setMovies(result);\n    });\n  }, [movieId]);\n  // const history = createBrowserHistory();\n\n  if (movies) {\n    const {\n      poster_path,\n      genres,\n      original_title,\n      overview,\n      release_date,\n      vote_average,\n    } = movies;\n    const locationState = location.state?.from ?? '/';\n    return (\n      <>\n        <div className={s.container}>\n          <NavLink to={locationState}>\n            <button\n              className={s.btn}\n              // onClick={() => history.back()}\n            >\n              go back\n            </button>\n          </NavLink>\n          <div className={s.movie_details}>\n            <img\n              className={s.img}\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={original_title}\n            />\n\n            <div>\n              <h2>\n                {original_title} ({release_date})\n              </h2>\n              <p>User Score: {vote_average}</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {genres.map(({ name }) => (\n                  <li key={name}>{name} </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <NavLink to=\"cast\" state={{ from: locationState }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\" state={{ from: locationState }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Routes>\n            <Route path=\"reviews\" element={<Reviews id={movieId} />} />\n            <Route path=\"cast\" element={<Cast id={movieId} />} />\n          </Routes>\n        </Suspense>\n      </>\n    );\n  }\n};\nexport default MovieDetails;\n","import axios from 'axios';\n// const KEY = '0511407effa2ffe16d4a1629eed8759a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = '306e564986f0782b8ec4bf227b0f3c28';\n// 'https://api.themoviedb.org/3/movie/550?api_key=0511407effa2ffe16d4a1629eed8759a';\nexport const movieDayAPI = async () => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const movieSearchAPI = async (query = '') => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const movieDetailsAPI = async id => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/movie/${id}?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const movieCreditsAPI = async id => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const movieReviewsAPI = async id => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Reviews","lazy","Cast","location","useLocation","useState","movies","setMovies","movieId","useParams","useEffect","movieDetailsAPI","then","result","poster_path","genres","original_title","overview","release_date","vote_average","locationState","state","from","className","s","to","src","alt","map","name","Suspense","fallback","path","element","id","BASE_URL","KEY","movieDayAPI","axios","response","data","console","error","movieSearchAPI","query","movieCreditsAPI","movieReviewsAPI"],"sourceRoot":""}