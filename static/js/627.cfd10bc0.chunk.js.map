{"version":3,"file":"static/js/627.cfd10bc0.chunk.js","mappings":"uOAgDA,EA7Ce,WACb,OAAsCA,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAcP,EAAYQ,IAAI,UACpCC,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAeH,GAAaI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAClCN,EAAcM,QAGjB,CAACL,IAgBJ,OACE,iCACE,kBAAMM,SAbS,SAAAC,GACjBA,EAAEC,iBACY,KAAVZ,GAIJF,EAAe,CAAEE,MAAOA,KACxBO,EAAAA,EAAAA,IAAeH,GAAaI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAClCN,EAAcM,OALdI,MAAM,eAUN,WACE,kBAAOC,KAAK,OAAOC,SAlBzB,SAAqBJ,GACnBV,EAASU,EAAEK,cAAcC,MAAMC,YAkB3B,mBAAQJ,KAAK,SAAb,wBAEDjB,IACC,wBACGK,EAAWiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACd,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKF,GAAhB,SAAuBC,KADhBD,a,0MCrCfG,EAAW,+BAEXC,EAAM,mCAECC,EAAW,mCAAG,uGAEVC,IAAAA,IAAA,UACHH,EADG,uCACoCC,IAC9ChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJN,wEAMvBC,QAAQC,MAAR,MANuB,wDAAH,qDAUXvB,EAAc,mCAAG,uGAAOP,EAAP,+BAAe,GAAf,kBAEb0B,IAAAA,IAAA,UACHH,EADG,iCAC8BC,EAD9B,kBAC2CxB,EAD3C,YAEVQ,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJH,wEAM1BC,QAAQC,MAAR,MAN0B,yDAAH,qDASdC,EAAe,mCAAG,WAAMX,GAAN,0FAEdM,IAAAA,IAAA,UACHH,EADG,kBACeH,EADf,oBAC6BI,IACvChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJF,wEAM3BC,QAAQC,MAAR,MAN2B,wDAAH,sDASfE,EAAe,mCAAG,WAAMZ,GAAN,0FAEdM,IAAAA,IAAA,UACHH,EADG,kBACeH,EADf,4BACqCI,IAC/ChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJF,wEAM3BC,QAAQC,MAAR,MAN2B,wDAAH,sDASfG,EAAe,mCAAG,WAAMb,GAAN,0FAEdM,IAAAA,IAAA,UACHH,EADG,kBACeH,EADf,4BACqCI,IAC/ChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJF,wEAM3BC,QAAQC,MAAR,MAN2B,wDAAH","sources":["components/Movies/Movies.jsx","services/filmAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport { movieSearchAPI } from 'services/filmAPI';\nconst Movies = () => {\n  const [queryParams, setQueryParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [searchFilm, setSearchFilm] = useState([]);\n  const querySearch = queryParams.get('query');\n  useEffect(() => {\n    if (querySearch) {\n      movieSearchAPI(querySearch).then(({ results }) => {\n        setSearchFilm(results);\n      });\n    }\n  }, [querySearch]);\n  function changeInput(e) {\n    setQuery(e.currentTarget.value.trim());\n  }\n\n  const submitForm = e => {\n    e.preventDefault();\n    if (query === '') {\n      alert('enter text');\n      return;\n    }\n    setQueryParams({ query: query });\n    movieSearchAPI(querySearch).then(({ results }) => {\n      setSearchFilm(results);\n    });\n  };\n  return (\n    <>\n      <form onSubmit={submitForm}>\n        <input type=\"text\" onChange={changeInput}></input>\n        <button type=\"submit\">Search </button>\n      </form>\n      {queryParams && (\n        <ul>\n          {searchFilm.map(({ id, original_title }) => (\n            <li key={id}>\n              <NavLink to={`${id}`}>{original_title}</NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n// const KEY = '0511407effa2ffe16d4a1629eed8759a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = '306e564986f0782b8ec4bf227b0f3c28';\n// 'https://api.themoviedb.org/3/movie/550?api_key=0511407effa2ffe16d4a1629eed8759a';\nexport const movieDayAPI = async () => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const movieSearchAPI = async (query = '') => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const movieDetailsAPI = async id => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/movie/${id}?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const movieCreditsAPI = async id => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const movieReviewsAPI = async id => {\n  try {\n    return await axios\n      .get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`)\n      .then(response => response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["useSearchParams","queryParams","setQueryParams","useState","query","setQuery","searchFilm","setSearchFilm","querySearch","get","useEffect","movieSearchAPI","then","results","onSubmit","e","preventDefault","alert","type","onChange","currentTarget","value","trim","map","id","original_title","to","BASE_URL","KEY","movieDayAPI","axios","response","data","console","error","movieDetailsAPI","movieCreditsAPI","movieReviewsAPI"],"sourceRoot":""}